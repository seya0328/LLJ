・改善点/今後のチャレンジ
# 改善点
- ブラウザーのアドレスバーに直接`/admin`のように入力すると管理者でログインしていない状態で管理機能を操作可能です、管理者でログインしていない状態で管理機能の操作は不可にしましょう。
- 新規会員登録時のバリデーションエラーメッセージは「[Translation missing: ja.errors.messages.not_saved]のように表示されます、該当する単語が日本語に変換できなかった趣旨のメッセージです、ja.ymlに該当する日本語を登録しましょう。
　→ja.ymlファイルに各モデルのカラム名も日本語で定義し、バリデーションエラーのメッセージも日本語で表示しましょう。入力項目が日本語のラベルの場合バリデーションエラーも日本語が親切です。
- 新規会員登録機能は[名前][メール][パスワード]は入力して[性別][生年月日]を選択しないで[登録]ボタンをクリックするとエラーになります、エラーを解消しましょう。
- 子供のプロフィール登録機能は[名前][カナ]などすべて未入力でも登録できます、すべて未入力での登録は不可にしましょう。
　→入力必須項目を設けて、バリデーション設定しましょう。
- 子供のプロフィール編集機能はブラウザーのアドレスバーに直接`/users/1/children/1/edit`のように入力すると他の会員の子供のプロフィールを編集可能です、他の会員の子供のプロフィールは編集不可にしましょう。
- 投稿(post)機能は[日付][タイトル]などすべて未入力でも登録できます、すべて未入力での登録は不可にしましょう。
　→入力必須項目を設けて、バリデーション設定しましょう。
- コメント投稿機能は[コメント]を未入力でも登録できます、未入力での登録は不可にしましょう。
　→入力必須項目を設けて、バリデーション設定しましょう。
- コメントの削除機能は[削除]リンクをクリックすると確認のダイアログを表示しましょう。
　→誤って削除することを防ぎましょう。s
- RailsのデフォルトタイムゾーンはUTC(協定時)となっているため、created_atメソッドやupdated_atメソッドを使って時間を表示させてみると日本時間から９時間差の表記になってしまいます。この差分を埋めるため、タイムゾーンを日本時間に設定しましょう。
　例：config/application.rbファイルにconfig.time_zone = 'Tokyo'を記載。

# 今後チャレンジしてみるといい点
- リファクタリングに挑戦してください。リファクタリングをすることで、理解しやすいコードになり、自分やほかのプログラマーの苦労を減らせるでしょう。さらに、リファクタリングの過程で理解を深められるのもメリットです。
- GitHub Actions(CI/CDツール）で自動デプロイに対応しましょう。developブランチなどで開発して、デプロイの必要なタイミングでmainブランチにマージする運用が可能です。
- ドメインを取得し、SSL(https)認証に対応しましょう。
　→ドメイン取得でDNSサーバーの設定とDNS（Domain Name System）の仕組みを学習することで理解が深まりインフラの学習につながります。
　→現在、WEBサービスをする上でSSL証明書は必須となっています。サイトの信頼性の向上につながります。